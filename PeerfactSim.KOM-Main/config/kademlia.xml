<?xml version='1.0' encoding='utf-8'?>
<Configuration>
	<!-- Description of the Simulation -->
	<Description>Simulation of Kademlia with 256 nodes and churn
	</Description>

	<!-- Here the variables are defined. They can be referred as "&variable-name" 
		and overridden via -->
	<Default>
		<Variable name="seed" value="0" />
		<Variable name="style" value="s" />
		<Variable name="nodeFactory"
			value="de.tud.kom.p2psim.impl.overlay.dht.kademlia2.setup.KademliaNodeFactory" />
		<Variable name="description" value="HX-20-v5-4h" />
		<Variable name="size" value="256" />
		<Variable name="churnStart" value="60m" />
		<Variable name="measurementStart" value="0m" />
		<Variable name="finishTime" value="300m" />
		<!-- Variable name="measurementHours" value="2.0" / -->
		<Variable name="actions" value="config/kademlia-actions.dat" />
		<Variable name="configPath" value="config/kademlia.properties" />
		<Variable name="gnpDataFile" value="data/measured_data.xml" />
	</Default>

	<SimulatorCore class="de.tud.kom.p2psim.impl.simengine.Simulator"
		static="getInstance" seed="$seed" finishAt="$finishTime" />

	<NetLayer class="de.tud.kom.p2psim.impl.network.gnp.GnpNetLayerFactory"
		gnpFile="$gnpDataFile" downBandwidth="200" upBandwidth="100">
		<LatencyModel class="de.tud.kom.p2psim.impl.network.gnp.GnpLatencyModel" />
	</NetLayer>

	<TransLayer class="de.tud.kom.p2psim.impl.transport.DefaultTransLayerFactory" />

	<KademliaSetup
		class="de.tud.kom.p2psim.impl.overlay.dht.kademlia2.setup.KademliaSetup"
		static="getInstance" configPath="$configPath">
		<NodeFactory class="$nodeFactory" />

		<Workload
			class="de.tud.kom.p2psim.impl.overlay.dht.kademlia2.setup.WorkloadGenerator" />

		<Monitor
			class="de.tud.kom.p2psim.impl.overlay.dht.kademlia2.measurement.KademliaMonitor"
			start="$measurementStart" stop="$finishTime">
			<Analyzer
				class="de.tud.kom.p2psim.impl.application.filesharing2.OperationDumper" />
			<Analyzer
				class="de.tud.kom.p2psim.impl.overlay.dht.kademlia2.measurement.HourlyTrafficAnalyzer"
				numberOfHosts="$size" />
			<Analyzer
				class="de.tud.kom.p2psim.impl.overlay.dht.kademlia2.measurement.DataLookupSuccessAnalyzer"
				outputFileDescr="datalookup" style="$style" description="$description"
				seed="$seed" />
			<Analyzer
				class="de.tud.kom.p2psim.impl.overlay.dht.kademlia2.measurement.KClosestNodesLookupSuccessAnalyzer"
				outputFileDescr="kclosestnodeslookup" style="$style" description="$description"
				seed="$seed" />
		</Monitor>
	</KademliaSetup>

	<HostBuilder class="de.tud.kom.p2psim.impl.scenario.DefaultHostBuilder"
		experimentSize="$size">
		<Group size="128" groupID="France">
			<NetLayer />
			<TransLayer />
			<NodeFactory />
			<Properties enableChurn="true" />
		</Group>

		<Group size="128" groupID="Germany">
			<NetLayer />
			<TransLayer />
			<NodeFactory />
			<Properties enableChurn="true" />
		</Group>
	</HostBuilder>

	<NodeFactory TriggerInitialRTBuild="" />

	<ChurnGenerator class="de.tud.kom.p2psim.impl.churn.DefaultChurnGenerator"
		start="$churnStart" stop="$finishTime">
		<ChurnModel class="de.tud.kom.p2psim.impl.churn.ExponentialChurnModel"
			churnFactor="0.5" meanSessionLength="60m" />
	</ChurnGenerator>

	<Scenario class="de.tud.kom.p2psim.impl.scenario.CSVScenarioFactory"
		actionsFile="$actions"
		componentClass="de.tud.kom.p2psim.impl.overlay.dht.kademlia2.components.AbstractKademliaNode" />
</Configuration>